#!/bin/bash

# ----- Configuration

ORGANISATION=ReSwift
NAME=ReSwift
BRANCH=$([ "$GITHUB_REF_NAME" == "" ] && echo "master" || echo "$GITHUB_REF_NAME")
SHA=`git rev-parse --verify HEAD --short`
REPO=`git config remote.origin.url`

TMP=Docs/tmp
CHECKOUT_PATH=Docs/output
OUTPUT_PATH=$CHECKOUT_PATH/$BRANCH


# ----- Clone the GitHub pages repo if required

echo " ==> Updating documentation for '$BRANCH' branch"

if [ -d "$CHECKOUT_PATH" ]; then
    echo " ==> Update: gh-pages -> $CHECKOUT_PATH"
    git -C "$CHECKOUT_PATH" pull origin gh-pages-test
else
    echo " ==> Checkout: gh-pages -> $CHECKOUT_PATH"
    git clone --branch gh-pages-test "$REPO" "$CHECKOUT_PATH"
fi

echo " ==> Generate documentation"
.scripts/generate-docs "$BRANCH" "$OUTPUT_PATH"

# ----- GitHub Actions Documentation updater

# Exit if not running from CI
if [ "$GITHUB_REF_NAME" == "" ]; then exit; fi
if [ "$SCHEME" != "iOS" ]; then exit; fi

pushd "$CHECKOUT_PATH"

    git config user.name "GitHub Actions"
    git config user.email ""

    # Exit if there are no changes to the documentation
    echo " ==> Check for documentation changes"
    CHANGE_SET=$(git status -s)
    if [ "$CHANGE_SET" == "" ]; then
        echo " <== No changes to the output on this push; exiting."
        exit 0
    fi

    # Exit if only the docset archive has changed (it always changes)
    if [ "$CHANGE_SET" == " M $BRANCH/docsets/$NAME.tgz" ]; then
        echo " <== Only the docset archive changed on this push; exiting."
        exit 0
    fi

    echo " ==> Stage changes"
    git add -A "$BRANCH"
    
    echo " ==> Commit changes"
    git commit -m "[$BRANCH $SHA] Regenerate documentation"
    
    echo " ==> Push changes -> '$REPO'"
    git push -q "https://github.com/$ORGANISATION/$NAME.git" gh-pages-test

    echo " <== All done ðŸ‘Š"
popd
